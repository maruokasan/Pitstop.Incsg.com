@{
    Layout = "/Views/Shared/_LayoutDash.cshtml";
    ViewBag.Title = "Categories";
    ViewData["Title"] = "Categories";
}

<!--begin::Content-->
<div class="content d-flex flex-column flex-column-fluid" id="kt_content">
    <!--begin::Container-->
    <div class="container-xxl" id="kt_content_container">
        <!--begin::Category-->
        <div class="card card-flush">
            <!--begin::Card header-->
            <div class="card-header align-items-center py-5 gap-2 gap-md-5">
                <!--begin::Card title-->
                <div class="card-title">
                    <!--begin::Search-->
                    <div class="d-flex align-items-center position-relative my-1">
                        <i class="ki-duotone ki-magnifier fs-3 position-absolute ms-4">
                            <span class="path1"></span>
                            <span class="path2"></span>
                        </i>
                        <input type="text" data-kt-ecommerce-category-filter="search" class="form-control form-control-solid w-250px ps-12" placeholder="Search Category" />
                    </div>
                    <!--end::Search-->
                </div>
                <!--end::Card title-->
                <!--begin::Card toolbar-->
                <div class="card-toolbar">
					<!--begin::Add customer-->
					<button type="button" class="btn btn-primary" id="addCategoryBtn" data-bs-toggle="modal" data-bs-target="#addCategoryModal">Add Category</button>
					<!--end::Add customer-->
                </div>
                <!--end::Card toolbar-->
            </div>
            <!--end::Card header-->
            <!--begin::Card body-->
            <div class="card-body pt-0">
                <!--begin::Table-->
                <table class="table align-middle table-row-dashed fs-6 gy-5" id="kt_ecommerce_category_table">
                    <thead>
                        <tr class="text-start text-gray-500 fw-bold fs-7 text-uppercase gs-0">
							<th class="min-w-250px">Id</th>
                            <th class="min-w-250px">Category</th>
                            <th class="min-w-150px">Description</th>
                            <th class="text-end min-w-70px">Actions</th>
                        </tr>
                    </thead>
                    <tbody class="fw-semibold text-gray-600">
                        <!-- Data will be populated dynamically using JavaScript -->
                    </tbody>
                    <!--end::Table body-->
                </table>
                <!--end::Table-->
            </div>
            <!--end::Card body-->
        </div>
        <!--end::Category-->
    </div>
    <!--end::Container-->
</div>
<!--end::Content-->

<!-- Add Category Modal -->
<div class="modal fade" id="addCategoryModal" tabindex="-1" aria-labelledby="addCategoryModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="addCategoryModalLabel">Add New Category</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <form id="addCategoryForm">
        <div class="modal-body">
          <div class="mb-3">
            <label for="categoryName" class="form-label">Category Name</label>
            <input type="text" class="form-control" id="categoryName" name="Name" required>
          </div>
          <div class="mb-3">
            <label for="categoryDescription" class="form-label">Category Description</label>
            <textarea class="form-control" id="categoryDescription" name="Description"></textarea>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
          <button type="submit" class="btn btn-primary">Add Category</button>
        </div>
      </form>
    </div>
  </div>
</div>

<!-- Edit Category Modal -->
<div class="modal fade" id="editCategoryModal" tabindex="-1" aria-labelledby="editCategoryModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editCategoryModalLabel">Edit Category</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="editCategoryForm">
				<input type="hidden" id="editCategoryId" name="Id">
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="editCategoryName" class="form-label">Category Name</label>
                        <input type="text" class="form-control" id="editCategoryName" name="Name" required>
                    </div>
                    <div class="mb-3">
                        <label for="editCategoryDescription" class="form-label">Category Description</label>
                        <textarea class="form-control" id="editCategoryDescription" name="Description"></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </div>
            </form>
        </div>
    </div>
</div>



<script>
$(document).ready(function () {
    function initializeDataTable() {
        $('#kt_ecommerce_category_table').DataTable({
            "columns": [
				{ "data": "id", "className": "dt-left" },
                { "data": "name", "className": "dt-left" },
                { "data": "description", "className": "dt-left" }, 
                {
                    "data": null,
                    "className": "dt-left",
                    "render": function (data, type, row) {
                        return `
                            <div class="dropdown">
                                <button class="btn btn-sm btn-light btn-active-light-primary dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                                    Actions 
                                    <i class="ki ki-bold-more-hor fs-3"></i>
                                </button>
                                <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                    <li><a class="dropdown-item edit-category" href="#" data-id="${row.id}">Edit</a></li>
                                    <li><a class="dropdown-item delete-category" href="#" data-id="${row.id}">Delete</a></li>
                                </ul>
                            </div>
                        `;
                    }
                }
            ]
        });
    }

$(document).on('click', '.edit-category', function (e) {
    e.preventDefault();
    var categoryId = $(this).data('id');
    console.log("Clicked Category ID:", categoryId); // Debugging line
    openEditModal(categoryId);
});


    function openEditModal(categoryId) {
        populateEditModal(categoryId); // Populate the edit modal with category data
        $('#editCategoryModal').modal('show');
    }

function populateEditModal(categoryId) {
    $.ajax({
        url: '/Dashboard/GetCategoryById',
        type: 'GET',
        data: { id: categoryId },
        dataType: 'json',
        success: function(response) {
            if (response && response.data) {
                $('#editCategoryId').val(categoryId);
console.log("Set category ID to:", $('#editCategoryId').val()); // This should log the correct category ID

                $('#editCategoryName').val(response.data.name);
                $('#editCategoryDescription').val(response.data.description);
            } else {
                console.log('No data returned for category ID: ' + categoryId);
            }
        },
        error: function(xhr, errorText, errorType) {
            console.log('AJAX Error: ' + errorText + ' (' + errorType + ')');
        }
    });
}

    $('#editCategoryForm').submit(function (e) {
        e.preventDefault();
var formData = {
    Id: $('#editCategoryId').val(), // This should be a string
    Name: $('#editCategoryName').val(),
    Description: $('#editCategoryDescription').val()
};
		console.log("formData before AJAX call:", formData);
        editCategory(formData);
    });

    function editCategory(formData) {
        $.ajax({
            url: '/Dashboard/EditCategory',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify(formData),
            success: function(response) {
                if (response.success) {
                    Swal.fire({
                        title: 'Success!',
                        text: 'Category edited successfully!',
                        icon: 'success',
                        timer: 3000
                    }).then(() => {
                        $('#editCategoryModal').modal('hide');
                        window.location.reload();
                    });
                } else {
                    Swal.fire('Error!', response.message, 'error');
                }
            },
            error: function(xhr, status, error) {
                Swal.fire('Error!', 'An error occurred: ' + error, 'error');
            }
        });
    }


    function fetchDataFromServer() {
        $.ajax({
            url: '/Dashboard/GetDataCategory',
            type: 'GET',
            dataType: 'json',
            success: function (response) {
                console.log(response);
                if (response && response.data && response.data.length > 0) {
                    var formattedData = response.data.map(function (item) {
                        return {
                            name: item.name,
                            description: item.description,
							id: item.id
                        };
                    });
                    $('#kt_ecommerce_category_table').DataTable().clear().rows.add(formattedData).draw();
                } else {
                    console.log('No data returned from the server.');
                }
            },
            error: function (xhr, errorText, errorType) {
                console.log('AJAX Error: ' + errorText + ' (' + errorType + ')');
            }
        });
    }


$(document).ready(function () {
    $('#addCategoryForm').submit(function (e) {
        e.preventDefault();
        addCategory();
    });

    // Function to add category
    function addCategory() {
        var formData = $('#addCategoryForm').serialize();

        $.ajax({
            url: '/Dashboard/AddCategory',
            type: 'POST',
            data: formData,
            success: function (response) {
                $('#addCategoryModal').modal('hide');
                Swal.fire({
                    icon: 'success',
                    title: 'Category added successfully!',
                    timer: 3000, 
                    showConfirmButton: false 
                }).then(function () {
                    location.reload();
                });
            },
            error: function (xhr, errorText, errorType) {
                console.log('AJAX Error: ' + errorText + ' (' + errorType + ')');
            }
        });
    }

    $('#addCategoryBtn').on('click', function (e) {
        e.preventDefault();
        $('#addCategoryModal').modal('show');
    });
})

    $(document).on('click', '.delete-category', function (e) {
        e.preventDefault();
        var categoryId = $(this).data('id');
        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {
                deleteCategory(categoryId);
            }
        });
    });

	function deleteCategory(categoryId) {
		$.ajax({
			url: '/Dashboard/DeleteCategory',
			type: 'POST',
			data: { id: categoryId },
			success: function (response) {
				if (response.success) {
					Swal.fire({
						title: 'Deleted!',
						text: response.message,
						icon: 'success',
						timer: 3000,
						willClose: () => {
							window.location.reload();
						}
					});
				} else {
					Swal.fire({
						title: 'Error!',
						text: response.message,
						icon: 'error',
						timer: 3000,
					});
				}
			},
			error: function (xhr, status, error) {
				Swal.fire({
					title: 'Error!',
					text: 'An error occurred while deleting the category: ' + error,
					icon: 'error',
					timer: 3000,
				});
			}
		});
	}

    initializeDataTable();
    fetchDataFromServer();
});


</script>
